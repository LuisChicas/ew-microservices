@using Microsoft.AspNetCore.Mvc.Localization
@using EasyWalletWeb.Infrastructure
@using CategoryType = EasyWallet.Business.Models.CategoryType 

@model EasyWalletWeb.ViewModels.CategoriesIndex

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Categories"];

    string deleteMessage = Localizer["AreYouSureDeleteCategory1"].Value + "{0}" + @Localizer["AreYouSureDeleteCategory2"].Value;

    string categoriesInstructionFullName = Constants.InstructionsNamePrefix + Constants.InstructionNameCategories;
}

@section Styles {
    <environment include="Development">
        <link rel="stylesheet" href="~/css/categories.css" />
        <link rel="stylesheet" href="~/css/instructions.css" />
    </environment>

    <environment exclude="Development">
        <link rel="stylesheet" href="~/css/categories.min.css" />
        <link rel="stylesheet" href="~/css/instructions.min.css" />
    </environment>
}

<div class="content">
    <partial name="NavBar" />

    <div class="categories-main-container">
        <div class="categories-container">
            @if (Context.Request.Cookies.Any(c => c.Key == categoriesInstructionFullName))
            {
                <div class="alert alert-warning mb-5" data-instruction="@Constants.InstructionNameCategories">
                    <span class="instructions-title">@Localizer["CategoriesInstructionsTitle"]</span>
                    <br />
                    <br />

                    @Localizer["CategoriesInstructions"]
                    <br />
                    <br />
                    <a id="alert-dismiss" href="#">@Localizer["GotIt"]</a>
                </div>
            }

            <div class="categories-header mb-4">
                <h2>@Localizer["Categories"]</h2>
                <a class="btn category-add-btn" asp-controller="Categories" asp-action="New">
                    <i class="fas fa-plus"></i>
                    <span class="not-mobile-only">@Localizer["AddCategory"]</span>
                    <span class="mobile-only">@Localizer["New"]</span>
                </a>
            </div>

            @foreach (var category in Model.Categories)
            {
                <div class="category">
                    <div class="mb-3">
                        <h4 class="d-inline">
                            <a asp-action="Edit" asp-route-id="@category.Id">
                                @category.Name
                            </a>
                        </h4>

                        @if (category.Type != CategoryType.Income
                            && category.Name != Constants.OthersCategoryNameEN
                            && category.Name != Constants.OthersCategoryNameES)
                        {
                            <a asp-action="Delete" asp-route-id="@category.Id" class="float-right" data-delete-message="@string.Format(deleteMessage, category.Name)">
                                <i class="fas fa-trash"></i>
                            </a>
                        }

                        <a asp-action="Edit" asp-route-id="@category.Id" class="float-right">
                            <i class="fas fa-edit"></i>
                        </a>
                    </div>
                    <ul class="list-unstyled d-block mb-0">
                        @foreach (var tag in category.Tags)
                        {
                            <li class="badge badge-info category-tag">@tag.Name</li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>

    <partial name="Footer" />
</div>

@section Scripts {
    <environment include="Development">
        <script src="~/js/categories.js"></script>
        <script src="~/js/instructions.js"></script>
        <script src="~/js/logout.js"></script>
    </environment>

    <environment exclude="Development">
        <script src="~/js/categories.min.js"></script>
        <script src="~/js/instructions.min.js"></script>
        <script src="~/js/logout.min.js"></script>
    </environment>
}